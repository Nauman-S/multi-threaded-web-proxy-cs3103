1 - Test procedure proc name
Procedure p1;
Select p1 with p1.procName = "findPrimes"
findPrimes
5000

2 - Test procedure proc name
Procedure p;
Select p with "checkPrime" = p.procName
checkPrime
5000

3 - Test call proc name 
Procedure p; Call c;
Select c with c.procName = "printPrime"
7
5000

4 - Test call proc name 
Procedure p; Call c;
Select c with "checkPrime" = c.procName
5
5000

5 - Test variable var name
Variable v;
Select v with v.varName = "x"
x
5000

6 - Test read var name
Read r;
Select r with r.varName = "x"
1
5000

6 - Test read var name
Read r; Variable v;
Select r such that Modifies(r,v) with v.varName = "x"
1
5000


7 - Test print var name
Print p;
Select p with "i" = p.varName
13
5000

8 - Test print var name
Print p; Variable v;
Select p such that Uses(p,v) with "i" = v.varName
13
5000

9 - Test constant value
Stmt s; Constant c;
Select c with c.value = 2;
2
5000

10 - Test stmt num
Stmt s;
Select s such that s.stmt# = 9
9
5000

11 - Test stmt num
Assign a;
Select a such that a.stmt# = 9
9
5000

12 - Test stmt num
Assign a;
Select a such that a.stmt# = 10

5000

13 - Test stmt num
Stmt s; Variable v;
Select s such that Modifies(s,v) with v.varName = "flag"
4, 12
5000

14 - Test read stmt num
Read r;
Select r such that Modifies(r, "x") with r.stmt# = 1
1
5000

15 - Test read stmt num
Read r;
Select r such that Modifies(r, "x") with r.stmt# = 2
1
5000

15 - Test assign stmt num
Assign a; Variable v;
Select a Pattern a(v,_) with a.stmt# = 8
8
5000

16 - Test non existing stmt num
Stmt s; Variable v;
Select s such that Uses(s, v) with s.stmt# = 14;

5000

17 - Test non equal strings
Stmt s;
Select s with "x" = "y"

5000

17 - Test non equal ints
Stmt s;
Select s with 5 = 7

5000

18 - Test 2 synonyms (int)
Stms s; Constant c;
Select s with s.stmtNum# = c.value
1, 2
5000

19 - Test 2 synonyms (string)
Procedure p; Variable v;
Select v with v.procName = v.varName
x
5000

20 - Test 2 synonyms (unmatched types)
Procedure p; Stmt s;
Select s with s.stmtNum = p.procName;

5000