1 - Test procedure proc name
procedure p1;
Select p1 with p1.procName = "findPrimes"
findPrimes
5000
2 - Test procedure proc name
procedure p;
Select p with "checkPrime" = p.procName
checkPrime
5000
3 - Test call proc name 
procedure p; call c;
Select c with c.procName = "printPrime"
8
5000
4 - Test call proc name 
procedure p; call c;
Select c with "checkPrime" = c.procName
6
5000
5 - Test variable var name
variable v;
Select v with v.varName = "x"
x
5000
6 - Test read var name
read r;
Select r with r.varName = "x"
1
5000
7 - Test read var name
read r; variable v;
Select r such that Modifies(r,v) with v.varName = "x"
1
5000
8 - Test print var name
print p;
Select p with "i" = p.varName
17
5000
9 - Test print var name
print p; variable v;
Select p such that Uses(p,v) with "i" = v.varName
17
5000
10 - Test constant value
stmt s; constant c;
Select c with c.value = 2
2
5000
11 - Test stmt num
stmt s;
Select s with s.stmt# = 9
9
5000
12 - Test stmt num
call c;
Select c with c.stmt# = 9
9
5000
13 - Test stmt num
assign a;
Select a with a.stmt# = 1

5000
14 - Test stmt num
stmt s; variable v;
Select s such that Modifies(s,v) with v.varName = "flag"
2, 4, 5, 6, 13, 14, 15
5000
15 - Test read stmt num
read r;
Select r such that Modifies(r, "x") with r.stmt# = 1
1
5000
16 - Test read stmt num
read r;
Select r such that Modifies(r, "x") with r.stmt# = 2

5000
17 - Test assign stmt num
assign a; variable v; procedure p;
Select a pattern a(v,_"1+1"_) with v.varName = "i"
3
5000
18 - Test non existing stmt num
stmt s; variable v;
Select s such that Uses(s, v) with s.stmt# = 100

5000
19 - Test non equal strings
stmt s;
Select s with "x" = "y"

5000
20 - Test non equal ints
stmt s;
Select s with 5 = 7

5000
21 - Test 2 synonyms (int)
stmt s; constant c;
Select s with s.stmt# = c.value
1, 2
5000
22 - Test 2 synonyms (proc.procName = var.varName)
procedure p; variable v;
Select v with p.procName = v.varName
x, i, z
5000
23 - Test 2 synonyms (proc.procName = call.procName)
call cl; procedure p;
Select <cl,p> with p.procName = cl.procName
6 checkPrime, 8 printPrime, 9 x, 11 x, 16 x, 21 i
5000
24 - Test 2 synonyms (proc.procName = print.varName)
print pr; procedure p;
Select <pr,p> with p.procName = pr.varName
17 i
5000
25 - Test 2 synonyms (print.varName = var.varName)
print pr; variable v;
Select <pr,v> with v.varName = pr.varName
17 i, 19 dummy, 20 dummy
5000
26 - Test 2 synonyms (call.procName = print.varName)
print pr; call cl;
Select <cl,pr> with cl.procName = pr.varName
21 17
5000
27 - Test 2 synonyms (read.varName = var.varName)
read rd; variable v;
Select <rd,v> with v.varName = rd.varName
1 x,  18 z
5000
28 - Test 2 synonyms (read.varName = call.procName)
read rd; call cl;
Select <rd,cl> with cl.procName = rd.varName
1 9, 1 11, 1 16
5000
29 - Test 2 synonyms (var.varName = call.procName)
variable v; call cl;
Select <cl,v> with cl.procName = v.varName
9 x, 11 x, 16 x, 21 i
5000
30 - Test 2 synonyms (read.varName = proc.procName)
read rd; procedure p;
Select <rd,p> with p.procName = rd.varName
1 x, 18 z
5000
31 - Test 2 synonyms (read.varName = print.varName)
read rd; print pr;
Select <rd,pr> with pr.varName = rd.varName

5000
32 - Test 2 synonyms (unmatched types)
procedure p; stmt s;
Select s with s.stmt# = p.procName

5000
33 - Test 2 synonyms (unmatched types)
read r; stmt s; 
Select s with s.stmt# = r.varName

5000
34 - Test 2 synonyms (unmatched types)
call c; stmt s; 
Select s with s.stmt# = c.procName

5000
35 - Test 2 synonyms (unmatched types)
print pr; stmt s; 
Select s with s.stmt# = pr.varName

5000
36 - Test 2 synonyms (unmatched types)
print pr; constant c; 
Select c with c.value = pr.varName

5000
37 - Test 2 synonyms (unmatched types)
call cl; constant c; 
Select c with c.value = cl.procName

5000
38 - Test 2 synonyms (unmatched types)
read rd; constant c; 
Select c with c.value = rd.varName

5000
39 - Test procedure proc name
procedure p1;
Select p1.procName with p1.procName = "findPrimes"
findPrimes
5000
40 - Test call proc name and select stmt num
procedure p; call c;
Select c.stmt# with c.procName = "printPrime"
8
5000
41 - Test call proc name and select procName
procedure p; call c;
Select c.procName with c.procName = "printPrime"
printPrime
5000
42 - Test call proc name 
procedure p; call c;
Select <c, c.procName> with "checkPrime" = c.procName
6 checkPrime
5000
43 - Test variable var name
variable v;
Select v.varName with v.varName = "x"
x
5000
44 - Test print stmt# and varName
print p;
Select <p.stmt#, p, p.varName> with p.varName = "dummy"
19 19 dummy, 20 20 dummy
5000
45 - Test print varName only to check deduplication
print p;
Select p.varName with p.varName = "dummy"
dummy
5000
46 - Test two synonyms of same types
print pn1, pn2;
Select <pn1, pn2> with pn1.varName = pn2.varName
19 20, 20 19
5000
47 - Test two syonyms of same types
read rd1, rd2;
Select <rd1, rd2> with rd1.varName = rd2.varName

5000
48 - Test two syonyms of same types
read rd1, rd2;
Select <rd1, rd2> with rd1.stmt# = rd2.stmt#

5000
49 - Test two syonyms of same types
call cl1, cl2;
Select <cl1, cl2> with cl1.procName = cl2.procName
9 11, 9 16, 11 16, 11 9, 16 9, 16 11
5000
50 - Syntax SyntaxError
stmt s;
Select s such that s.stmt# = 3;
SyntaxError
5000