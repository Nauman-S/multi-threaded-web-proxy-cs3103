procedure findPrimes {
    read x;                              // 1
    if (x > 2) then {                    // 2
        i = 1 + 1;                       // 3
        while (i < x) {                  // 4
            flag = 1;                    // 5
            call checkPrime;             // 6
            if (flag == 1) then {        // 7
                call printPrime;         // 8
            } else {
                call x;                  // 9
            }
            i = i + 1;                   // 10
        }
    } else {
        call x;                          // 11
    }
    
}

procedure checkPrime {
    j = 2;                               // 12 
    while (j < i) {                      // 13
        if(i % j == 0) then {            // 14
            flag = 0;                    // 15
        } else {
            call x;                      // 16
        }
    }
}

procedure printPrime {
    print i;                             // 17
}

procedure x {
    read z;                              // 18
}

procedure i {
    print dummy;             // 19
}

procedure z {
    print dummy;            // 20
     call i;                               // 21
}